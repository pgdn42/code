{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\lab1\\\\src\\\\CountryInfo.js\";\nimport countries from 'world-countries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CountryInfo(props) {\n  countries.sort((a, b) => b.area - a.area);\n  let ratio = props.data.area / countries[0].area * 100 + \"%\";\n  let area = props.data.area / 1000000;\n\n  function bigCountry() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countryInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [props.data.name.common, /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\" \", Math.round(props.data.area / 1000000, 3), \" million km\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 103\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'rgb(223, 223, 223)'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: ratio,\n            height: '20px',\n            backgroundColor: \"rgb(167, 167, 167)\",\n            visibility: \"visible\",\n            textAlign: 'center'\n          },\n          children: [Math.round(parseInt(ratio), 3), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Region: \", props.data.name.official]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 16\n        }, this), \"Capital: \", props.data.capital]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 16\n        }, this), \"Region: \", props.data.subregion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this);\n  }\n\n  function smallCountry() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countryInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [props.data.name.common, /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\" \", props.data.area, \"KM\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 71\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'rgb(223, 223, 223)'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: ratio,\n            height: '20px',\n            backgroundColor: \"rgb(167, 167, 167)\",\n            visibility: \"visible\",\n            textAlign: 'center'\n          },\n          children: [Math.round(parseInt(ratio), 3), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: //.filter(props.data => props.data.common.name = \"Antarctica\")\n    props.detailed ? bigCountry() : smallCountry()\n  }, void 0, false);\n}\n\n_c = CountryInfo;\nexport default CountryInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryInfo\");","map":{"version":3,"names":["countries","CountryInfo","props","sort","a","b","area","ratio","data","bigCountry","name","common","Math","round","backgroundColor","width","height","visibility","textAlign","parseInt","official","capital","subregion","smallCountry","detailed"],"sources":["C:/code/lab1/src/CountryInfo.js"],"sourcesContent":["import countries from 'world-countries';\r\n\r\nfunction CountryInfo(props){\r\n    countries.sort((a, b) => b.area - a.area)\r\n    let ratio = (props.data.area/countries[0].area * 100 + \"%\")\r\n    let area = (props.data.area/1000000)\r\n\r\n      function bigCountry(){\r\n        return(\r\n        <div className=\"countryInfo\">\r\n\r\n        <p>{props.data.name.common}<small> {Math.round(props.data.area/1000000, 3)} million km</small><sup>2</sup></p>\r\n        <div style={{backgroundColor:'rgb(223, 223, 223)'}}>\r\n        <div style={{width: ratio, height: '20px', backgroundColor: \"rgb(167, 167, 167)\", visibility: \"visible\", textAlign:'center'}}>{Math.round(parseInt(ratio,), 3)}%</div>\r\n        </div>\r\n        <small>Region: {props.data.name.official}</small>\r\n        <small><br></br>Capital: {props.data.capital}</small>\r\n        <small><br></br>Region: {props.data.subregion}</small>\r\n\r\n\r\n        </div>\r\n        )\r\n      }\r\n      function smallCountry(){\r\n      return(\r\n        <div className=\"countryInfo\">\r\n\r\n        <p>{props.data.name.common}<small> {props.data.area}KM</small><sup>2</sup></p>\r\n        \r\n        <div style={{backgroundColor:'rgb(223, 223, 223)'}}>\r\n        <div style={{width: ratio, height: '20px', backgroundColor: \"rgb(167, 167, 167)\", visibility: \"visible\", textAlign:'center'}}>{Math.round(parseInt(ratio,), 3)}%</div>\r\n        \r\n        </div>\r\n        </div>\r\n        )\r\n        }\r\n      \r\n\r\n    return (\r\n\r\n    <>\r\n\r\n        {\r\n            \r\n        //.filter(props.data => props.data.common.name = \"Antarctica\")\r\n            props.detailed ? bigCountry() : smallCountry()\r\n\r\n        }\r\n\r\n    </>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default CountryInfo;"],"mappings":"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"},"metadata":{},"sourceType":"module"}